swagger: '2.0'
info:
  version: 1.0.0
  title: Gwan parking lots API
  description: API providing toll parking for sedan / electric vehicles.
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: ParkingLot
    description: Parking lot operations allow administrators to manage the parking lots globally.
paths:
  /admin/parkingLots:
    post:
      summary: Create a parking lot
      description: Creates a new parking lot for later vehicle management.
      parameters:
        - in: body
          name: parkingLot
          description: Contents of the new parking lot.
          required: true
          schema:
            $ref: '#/definitions/ParkingLot'
      responses:
        '201':
          description: Parking lot created successfully.
          schema:
            $ref: '#/definitions/ParkingLot'
        '400':
          description: Provided parking lot check failed.
      tags:
        - ParkingLot       
    get:
      summary: Parking lot list retrieval
      description: Retrieves the list of existing parking lots.
      tags:
        - ParkingLot
      responses:
        '200':
          description: Parking lots retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ParkingLot'
  '/admin/parkingLots/{parkingLotRef}':
    get:
      summary: Parking lot retrieval
      description: Retrieves the parking lot corresponding to the provided ref.
      parameters:
        - in: path
          name: parkingLotRef
          description: Ref of the parking lot to retrieve.
          type: string
          required: true
      tags:
        - ParkingLot
      responses:
        '200':
          description: Parking lot retrieved successfully.
          schema:
            $ref: '#/definitions/ParkingLot'
    delete:
      summary: Parking lot deletion
      description: Deletes the parking lot corresponding to the provided ref. The parking lot must be empty (i.e. no vehicle parked there)
      parameters:
        - in: path
          name: parkingLotRef
          description: Ref of the parking lot to delete.
          type: string
          required: true
      tags:
        - ParkingLot
      responses:
        '204':
          description: Parking lot deleted successfully.
definitions:
  ParkingLot:
    description: Resource representing a parking lot. It must contain a list of parking slots
    properties:
      ref:
        type: string
        description: Ref of the parking lot. Generated by the system upon creation.
      name:
        type: string
        description: Name of the parking lot
      parkingSlots:
        type: array
        description: List of parking slots.
        items:
          $ref: '#/definitions/ParkingSlot'
      pricingPolicy:
        description: Parking lot pricing policy.
        $ref: '#/definitions/PricingPolicy'
    example:
      name: Test parking lot
      parkingSlots:
        - name: Test parking slot 2
          parkingSlotType: PARKING_SLOT_50KW
        - name: Test parking slot 0
          parkingSlotType: PARKING_SLOT_SEDAN
        - name: Test parking slot 1
          parkingSlotType: PARKING_SLOT_20KW
        - name: Test parking slot 12
          parkingSlotType: PARKING_SLOT_SEDAN
        - name: Test parking slot 14
          parkingSlotType: PARKING_SLOT_50KW
        - name: Test parking slot 3
          parkingSlotType: PARKING_SLOT_SEDAN
        - name: Test parking slot 4
          parkingSlotType: PARKING_SLOT_20KW
        - name: Test parking slot 5
          parkingSlotType: PARKING_SLOT_50KW
        - name: Test parking slot 6
          parkingSlotType: PARKING_SLOT_SEDAN
        - name: Test parking slot 7
          parkingSlotType: PARKING_SLOT_20KW
        - name: Test parking slot 8
          parkingSlotType: PARKING_SLOT_50KW
        - name: Test parking slot 9
          parkingSlotType: PARKING_SLOT_SEDAN
        - name: Test parking slot 10
          parkingSlotType: PARKING_SLOT_20KW
        - name: Test parking slot 11
          parkingSlotType: PARKING_SLOT_50KW
        - name: Test parking slot 13
          parkingSlotType: PARKING_SLOT_20KW
      pricingPolicy:
        20kwPricingPolicy: 10.5 * h + 20
        50kwPricingPolicy: 12 * h * h + 2
        sedanPricingPolicy: 10 * h
  PricingPolicy:
    description: 'Resource representing the pricing policy for a parking lot. The three properties are equation for computing the price based on the number of hours (h). Thus, the string is verified upon insertion, and the only allowed string parts are: h, *, +, (, ) and any number.'
    properties:
      sedanPricingPolicy:
        type: string
        description: Pricing policy for sedan cars
      20kwPricingPolicy:
        type: string
        description: Pricing policy for 20kw electric cars
      50kwPricingPolicy:
        type: string
        description: Pricing policy for 20kw electric cars
  ParkingSlot:
    description: Resource representing a parking slot in a parking lot. It can accept either sedan cars, 20kw electric cars or 50kw electric cars.
    properties:
      name:
        type: string
        description: Name of the parking slot. It must be unique within the parking lot.
      parkingSlotType:
        type: string
        description: 'Type of this parking slot. Possible values are ''PARKING_SLOT_SEDAN’ (parking slot for sedan cars), ‘PARKING_SLOT_20KW’ (parking slot for 20kw electric cars) and ''PARKING_SLOT_50KW’ (parking slot for 50kw electric cars).'
        enum:
          - PARKING_SLOT_SEDAN
          - PARKING_SLOT_20KW
          - PARKING_SLOT_50KW
      licensePlateParkedVehicle:
        type: string
        description: License plate of the car parked on this slot. It must be null when creating a parking lot.
      parkTime:
        type: string
        format: date-time
        description: Time of parking for the car currently on this slot. It must be null when creating a parking lot.
        

